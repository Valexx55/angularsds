ANGULAR: Herramienta para hacer webs de forma ordenada y agil
Carpeta assets: para guardar archivos ejecutables / config / fotos / documentos
COMPONENTE: ETIQUETA "personalizada" / sección de un página o una página. Encapsula un HTML/CSS/JS (TS)
MÓDULO: Agrupación de componentes, directivas, servicios...Englobamos una función o estructura. RoutingModule
SPA: Single Page App
CLIENTE DE ANGULAR: ng LANZAR LA app/ añadir nuevos elementos a la app/ test / compilación 
        ng serve - arrancar
        ng g c - generar un nuevo componente
spect.ts: Testing
.ts: Clases Compoentes, Modulos, Directivas, Pipes, Propias
Decoraddor: Anotación o Directva que identifica para Angular el Rol de esa Clases
IOC. Inversion de control: Yo no hago el new, lo hace Angular
Ciclo de VIda. constructor, ngoninit...ngondestroy
SERVICIO: Una clase que actúa proveedor de un Compoente (contiene la funcionalidad HTTP)
RXJS:Librería para gestionar procesos asíncronas

        Observable: tipo devuelto cuando un dato se hace esperar
        Observer: El ojbeto que está suscrito o esperando la respuesta de un Observable
        
HTTP: CABECERA / CUERPO

TYPESCRITP:

    non-null Operator (!)

ANGULAR Material: Librería de compenentes de la "Casa Angular"

standalone: Cada componente debe declarar explícitamente sus depedencias
Property bindign: [ ] asigno un valor a una propeidad del Compoente desde la plantilla

Formularios Plantilla (Template)
        validación declarativa
        controles / formulario tienen atributos de control      
        pristine/dirty submitted valid
Reactivos

ViewChild Tenemos acceso al hijo desde su padre #selector
ViewChildren (obtengo  a varios)
ElementRef: Envoltorio / clase ref a elementos nativos (div, img)

ngAfterViewInit - ciclo vida se completa cuando la plantilla se ha carga

@Input > paso atributos de padre a hijo (Property binding)
@Output > emitir un evento del hijo al padre (Event binding)

